// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String             @id @default(cuid())
  email        String             @unique
  password     String
  firstName    String
  lastName     String
  isVerified   Boolean            @default(true)
  role         Role               @default(CUSTOMER)
  referralCode String             @unique
  referredBy   String?
  points       Int                @default(0)
  transactions PointTransaction[]
  coupons      Coupon[]
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
}

enum Role {
  CUSTOMER
  ORGANIZER
}

model EvtItem {
  id             Int      @id @default(autoincrement())
  name           String
  description    String
  price          Int
  startDate      DateTime
  endDate        DateTime
  location       String
  category       String
  availableSeats Int
}

model PointTransaction {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  points    Int // Positive for earned, negative for spent
  reason    String // e.g., "REFERRAL", "DISCOUNT"
  createdAt DateTime @default(now())
  expiresAt DateTime // Expiration date for points
}

model Coupon {
  id        String   @id @default(cuid())
  code      String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  discount  Int // Discount amount (e.g., percentage)
  expiresAt DateTime // Expiration date for the coupon
  createdAt DateTime @default(now())
}
